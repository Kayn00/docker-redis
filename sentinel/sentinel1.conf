# bind 127.0.0.1

# 哨兵的端口号
# 因为各个哨兵节点会运行在单独的Docker容器中
# 所以无需担心端口重复使用
# 如果需要在单机
port 26379

# 设定密码认证
# requirepass 123456

# 配置哨兵的监控参数
# 格式：sentinel monitor <master-name> <ip> <redis-port> <quorum>
# master-name是为这个被监控的master起的名字
# ip是被监控的master的IP或主机名。因为Docker容器之间可以使用容器名访问，所以这里写master节点的容器名
# redis-port是被监控节点所监听的端口号
# quorom设定了当几个哨兵判定这个节点失效后，才认为这个节点真的失效了
sentinel monitor local-master 172.21.0.3 6379 2

# 连接主节点的密码
# 格式：sentinel auth-pass <master-name> <password>
# sentinel auth-pass local-master 123456

# master在连续多长时间无法响应PING指令后，就会主观判定节点下线，默认是30秒
# 格式：sentinel down-after-milliseconds <master-name> <milliseconds>
sentinel down-after-milliseconds local-master 50000

sentinel config-epoch local-master 1
# Generated by CONFIG REWRITE
dir "/data"
sentinel leader-epoch local-master 1
sentinel known-slave local-master 172.21.0.2 6379
sentinel known-slave local-master 172.21.0.4 6379
sentinel known-sentinel local-master 172.21.0.7 26379 36cc18237c79bb68f86f02f74df853e31e447ab5
sentinel known-sentinel local-master 172.21.0.5 26379 d73b958fef74434f6134bcabd7c589a5e23b79aa

sentinel current-epoch 1
